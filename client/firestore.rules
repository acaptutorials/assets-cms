rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Is the user signed-in using basic authentication?
    function isSignedIn() {
      return request.auth != null;
    }

    // Is the signed-in user a valid App user?
    // Has a custom claims "account_level" value: 1=admin, 2=user
    function isValidUser() {
      return isSignedIn() && request.auth.token.account_level != null
    }


    // Does the signed-in user's auth uid match the requested userId?
    function isAccountOwner(userId) {
      return request.auth.uid == userId;
    }

    match /path/{documents=**} {
      allow write: if isValidUser();
      allow read: if true;
    }

    match /users/{userId}  {
      allow write: if isValidUser() && isAccountOwner(userId);
      allow get: if isValidUser() && isAccountOwner(userId);
      allow list: if false;
    }

    match /users/{userId}/{document=**} {
      allow write: if isValidUser() && isAccountOwner(userId);
      allow get: if isValidUser() && isAccountOwner(userId);
      allow list: if false;
    }
  }
}
